// Code generated by entimport, DO NOT EDIT.

package schema

import (
	"encoding/json"

	"entgo.io/ent"
	"entgo.io/ent/schema"
	"entgo.io/ent/schema/edge"
	"entgo.io/ent/schema/field"
)

type Image struct {
	ent.Schema
}

func (Image) Fields() []ent.Field {
	return []ent.Field{field.String("id").StorageKey("id"), field.String("name").StorageKey("name"), field.String("type").StorageKey("type"), field.Int("size").StorageKey("size"), field.Int32("width").StorageKey("width"), field.Int32("height").StorageKey("height"), field.JSON("exif", json.RawMessage{}).StorageKey("exif"), field.String("hash").StorageKey("hash"), field.String("address").StorageKey("address"), field.Bool("isPublic").StorageKey("isPublic"), field.String("description").StorageKey("description"), field.JSON("tags", json.RawMessage{}).StorageKey("tags"), field.Bytes("thumbnail_10x").StorageKey("thumbnail_10x"), field.String("thumbnail_320x_id").Optional().StorageKey("thumbnail_320x_id"), field.String("thumbnail_768x_id").Optional().StorageKey("thumbnail_768x_id"), field.String("compressed_id").Optional().StorageKey("compressed_id"), field.String("original_id").Optional().StorageKey("original_id"), field.Time("createdAt").StorageKey("createdAt"), field.Time("updatedAt").StorageKey("updatedAt"), field.String("uploadedBy").Optional().StorageKey("uploadedBy"), field.String("category").StorageKey("category"), field.JSON("extraData", json.RawMessage{}).StorageKey("extraData"), field.JSON("description_vector", json.RawMessage{}).Optional().StorageKey("description_vector")}

}
func (Image) Edges() []ent.Edge {
	return []ent.Edge{edge.From("compressed", File.Type).Ref("Image_compressed").Unique().Field("compressed_id"), edge.From("original", File.Type).Ref("Image_original").Unique().Field("original_id"), edge.From("thumbnail320x", File.Type).Ref("Image_thumbnail320x").Unique().Field("thumbnail_320x_id"), edge.From("thumbnail768x", File.Type).Ref("Image_thumbnail768x").Unique().Field("thumbnail_768x_id"), edge.From("user", User.Type).Ref("images").Unique().Field("uploadedBy"), edge.To("moment_images", MomentImage.Type)}
}
func (Image) Annotations() []schema.Annotation {
	return nil
}
