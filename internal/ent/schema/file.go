// Code generated by entimport, DO NOT EDIT.

package schema

import (
	"encoding/json"

	"entgo.io/ent"
	"entgo.io/ent/schema"
	"entgo.io/ent/schema/edge"
	"entgo.io/ent/schema/field"
)

type File struct {
	ent.Schema
}

func (File) Fields() []ent.Field {
	return []ent.Field{field.String("id").StorageKey("id"), field.String("bucketId").Optional().StorageKey("bucketId"), field.String("name").StorageKey("name"), field.String("type").StorageKey("type"), field.String("hash").StorageKey("hash"), field.Int("size").StorageKey("size"), field.String("path").StorageKey("path"), field.Bool("isPublic").StorageKey("isPublic"), field.String("description").StorageKey("description"), field.JSON("tags", json.RawMessage{}).StorageKey("tags"), field.JSON("extraData", json.RawMessage{}).StorageKey("extraData"), field.String("category").StorageKey("category"), field.String("uploadedBy").Optional().StorageKey("uploadedBy"), field.Time("createdAt").StorageKey("createdAt"), field.Time("updatedAt").StorageKey("updatedAt")}

}
func (File) Edges() []ent.Edge {
	return []ent.Edge{edge.From("bucket", Bucket.Type).Ref("files").Unique().Field("bucketId"), edge.From("user", User.Type).Ref("files").Unique().Field("uploadedBy"), edge.To("Image_compressed", Image.Type), edge.To("Image_original", Image.Type), edge.To("Image_thumbnail320x", Image.Type), edge.To("Image_thumbnail768x", Image.Type), edge.To("Video_file", Video.Type), edge.To("Video_poster", Video.Type)}
}
func (File) Annotations() []schema.Annotation {
	return nil
}
