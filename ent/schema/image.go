// Code generated by entimport, DO NOT EDIT.

package schema

import (
	"entgo.io/ent"
	"entgo.io/ent/schema"
	"entgo.io/ent/schema/edge"
	"entgo.io/ent/schema/field"
)

type Image struct {
	ent.Schema
}

func (Image) Fields() []ent.Field {
	return []ent.Field{field.String("id"), field.String("name"), field.String("type"), field.Int("size"), field.Int32("width"), field.Int32("height"), field.JSON("exif", struct{}{}), field.String("hash"), field.String("address"), field.Bool("isPublic"), field.String("description"), field.JSON("tags", struct{}{}), field.JSON("extraData", struct{}{}), field.String("category"), field.Bytes("thumbnail_10x"), field.String("thumbnail_320x_id").Optional(), field.String("thumbnail_768x_id").Optional(), field.String("compressed_id").Optional(), field.String("original_id").Optional(), field.String("uploadedBy").Optional(), field.Time("createdAt"), field.Time("updatedAt")}

}
func (Image) Annotations() []schema.Annotation {
	return nil
}
func (Image) Edges() []ent.Edge {
	return []ent.Edge{edge.From("compressed_image", File.Type).Ref("compressed_image").Unique().Field("compressed_id"), edge.From("original_image", File.Type).Ref("original_image").Unique().Field("original_id"), edge.From("thumbnail_320x_image", File.Type).Ref("thumbnail_320x_image").Unique().Field("thumbnail_320x_id"), edge.From("thumbnail_768x_image", File.Type).Ref("thumbnail_768x_image").Unique().Field("thumbnail_768x_id"), edge.From("user", User.Type).Ref("images").Unique().Field("uploadedBy"), edge.To("moment_images", MomentImage.Type)}
}
